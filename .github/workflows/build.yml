name: Build and Deploy

on:
  push:
    branches:
      - develop

env:
  AZURE_WEBAPP_NAME: CodyzeVSPlugin.sln
  AZURE_WEBAPP_PACKAGE_PATH: 'published'      # set this to the path to your web app project, defaults to the repository root

jobs:
  build:
    name: Build and deploy
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Test
      run: |
        dir HKLM:\SOFTWARE\Microsoft\MSBuild\ToolsVersions\
    
    - name: Setup MSBuild path
      uses: microsoft/setup-msbuild@v1.0.1
#      with:
#        vs-version: "[16.4,16.6)"
    
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.2
    
    - name: Restore NuGet packages
      run: nuget restore ${{ env.AZURE_WEBAPP_NAME }}

    - name: Build
      run: msbuild ${{ env.AZURE_WEBAPP_NAME }} /p:Configuration=Release

    - name: Publish artifacts
      uses: actions/upload-artifact@v1.0.0
      with:
        name: codyze-vs-plugin
        path: CodyzeVSPlugin\bin\Release\CodyzeVSPlugin.vsix
  
    - name: Determine Version
      run: |
        # determine version from tag
        export VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
        if [[ $VERSION != v* ]]
        then
          export VERSION=""
          echo "Building version-less (master or feature branch)"
        else
          # make version more Java-friendly by dropping the 'v'
          export VERSION=${VERSION:1:${#VERSION}}
          echo "Building as ${VERSION}"
        fi
        echo "##[set-output name=version;]$VERSION"
      id: determine_version

    - name: Create Release    # Create a draft release. Actual release must be done manually
      if: startsWith(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ steps.determine_version.outputs.version }}
        draft: false
        prerelease: false

    - name: "Upload Release Asset"
      if: startsWith(github.ref, 'refs/tags/v')
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: CodyzeVSPlugin\bin\Release\CodyzeVSPlugin.vsix
        asset_name: CodyzeVSPlugin-${{ steps.determine_version.outputs.version }}.vsix
        asset_content_type: application/vsix
